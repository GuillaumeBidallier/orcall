name: Deploy

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  tf_version: '1.11.0'
  tg_version: '0.75.0'
  working_dir: '.cloud/infra/envs/dev'
  project_id: 'orcall'
  docker_registry: 'europe-west1-docker.pkg.dev'
  docker_repository: 'orcall/orcall'

  CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
  CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
  CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

jobs:
  build-and-plan:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Google Cloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ env.docker_registry }}
          echo "CONTAINER_IMAGE_URL=${{ env.docker_registry }}/${{ env.docker_repository }}/front:${{ github.sha }}" >> "$GITHUB_ENV"

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .cloud/docker/Dockerfile
          push: true
          tags: ${{ env.CONTAINER_IMAGE_URL }}

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --check --diff'

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'plan'

  deploy:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build-and-plan
    environment:
      name: prod

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Google Cloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: |
          echo "CONTAINER_IMAGE_URL=${{ env.docker_registry }}/${{ env.docker_repository }}/front:${{ github.sha }}" >> "$GITHUB_ENV"

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'apply'
